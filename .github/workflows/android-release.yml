name: "Android Build & Release"

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    name: Android Build & Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository 
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: 'oracle'
          java-version: '17'

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.24.1'
          channel: 'stable'

      - name: Decode android/neumodore_key.jks
        run: echo "${{ secrets.KEYSTORE_JKS_PROD }}" | base64 --decode > android/app/keystore.jks

      - name: Decode android/key.properties
        run: echo "${{ secrets.KEY_PROPERTIES_PROD }}" | base64 --decode > android/key.properties

      - name: Install Flutter Dependencies
        run: flutter pub get

      - name: Test Flutter App
        run: flutter test

      - name: Build APK
        run: flutter build apk --release --dart-define=APP_ENV=PROD

      - name: Build appBundle
        run: flutter build appbundle --release --dart-define=APP_ENV=PROD

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Releases
          path: |
            build/app/outputs/flutter-apk/app-release.apk
            build/app/outputs/bundle/release/app-release.aab

      - name: Extract version from pubspec.yaml
        id: extract_version
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r') 
          echo "VERSION=$version" >> $GITHUB_ENV

      # - name: Check if Tag Exists
      #   id: check_tag
      #   run: |
      #     if git rev-parse "v${{ env.VERSION }}" > /dev/null 2>&1; then
      #       echo "TAG_EXISTS=true" >> $GITHUB_ENV
      #     else
      #       echo "TAG_EXISTS=false" >> $GITHUB_ENV
      #     fi

      # - name: Modify Tag
      #   if: env.TAG_EXISTS == 'true'
      #   id: modify_tag
      #   run: |
      #     new_version="${{ env.VERSION }}-build-${{ github.run_number }}"
      #     echo "VERSION=$new_version" >> $GITHUB_ENV

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "build/app/outputs/flutter-apk/*.apk,build/app/outputs/bundle/release/*.aab"
          tag: v${{ env.VERSION }}
          TOKEN: ${{ secrets.TOKEN }}

// Mocks generated by Mockito 5.4.4 from annotations
// in sia_app/test/bloc/attendance/attendance_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:fpdart/fpdart.dart' as _i4;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:sia_app/core/connection.dart' as _i8;
import 'package:sia_app/core/failures.dart' as _i5;
import 'package:sia_app/data/models/attendance.dart' as _i6;
import 'package:sia_app/data/repository/attendance_repository.dart' as _i2;
import 'package:sia_app/data/repository/local/local_db_repository.dart' as _i9;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [AttendanceRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockAttendanceRepository extends _i1.Mock
    implements _i2.AttendanceRepository {
  @override
  _i3.Future<_i4.Either<_i5.Failure, _i6.Attendance>> getAttendance() =>
      (super.noSuchMethod(
        Invocation.method(
          #getAttendance,
          [],
        ),
        returnValue: _i3.Future<_i4.Either<_i5.Failure, _i6.Attendance>>.value(
            _i7.dummyValue<_i4.Either<_i5.Failure, _i6.Attendance>>(
          this,
          Invocation.method(
            #getAttendance,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i3.Future<_i4.Either<_i5.Failure, _i6.Attendance>>.value(
                _i7.dummyValue<_i4.Either<_i5.Failure, _i6.Attendance>>(
          this,
          Invocation.method(
            #getAttendance,
            [],
          ),
        )),
      ) as _i3.Future<_i4.Either<_i5.Failure, _i6.Attendance>>);
}

/// A class which mocks [Connection].
///
/// See the documentation for Mockito's code generation for more information.
class MockConnection extends _i1.Mock implements _i8.Connection {
  @override
  _i3.Future<bool> checkConnection() => (super.noSuchMethod(
        Invocation.method(
          #checkConnection,
          [],
        ),
        returnValue: _i3.Future<bool>.value(false),
        returnValueForMissingStub: _i3.Future<bool>.value(false),
      ) as _i3.Future<bool>);
}

/// A class which mocks [LocalDBRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDBRepository extends _i1.Mock implements _i9.LocalDBRepository {
  @override
  _i3.Future<void> initializeBox() => (super.noSuchMethod(
        Invocation.method(
          #initializeBox,
          [],
        ),
        returnValue: _i3.Future<void>.value(),
        returnValueForMissingStub: _i3.Future<void>.value(),
      ) as _i3.Future<void>);
}

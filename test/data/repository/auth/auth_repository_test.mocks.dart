// Mocks generated by Mockito 5.4.4 from annotations
// in sia_app/test/data/repository/auth/auth_repository_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dio/dio.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:sia_app/core/dio_client.dart' as _i3;
import 'package:sia_app/data/repository/local/local_db_repository.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DioClient].
///
/// See the documentation for Mockito's code generation for more information.
class MockDioClient extends _i1.Mock implements _i3.DioClient {
  @override
  _i2.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#dio),
        ),
        returnValueForMissingStub: _FakeDio_0(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i2.Dio);

  @override
  _i2.Dio get dioWithRefreshToken => (super.noSuchMethod(
        Invocation.getter(#dioWithRefreshToken),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#dioWithRefreshToken),
        ),
        returnValueForMissingStub: _FakeDio_0(
          this,
          Invocation.getter(#dioWithRefreshToken),
        ),
      ) as _i2.Dio);

  @override
  _i2.Dio get dioWithToken => (super.noSuchMethod(
        Invocation.getter(#dioWithToken),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#dioWithToken),
        ),
        returnValueForMissingStub: _FakeDio_0(
          this,
          Invocation.getter(#dioWithToken),
        ),
      ) as _i2.Dio);
}

/// A class which mocks [LocalDBRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDBRepository extends _i1.Mock implements _i4.LocalDBRepository {
  @override
  _i5.Future<void> initializeBox() => (super.noSuchMethod(
        Invocation.method(
          #initializeBox,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}
